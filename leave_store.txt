
// 2nd Proper working code
    // public function store_leave(Request $request)
    // {
    //     // Step 1: Validate the request
    //     $validator = Validator::make($request->all(), [
    //         'leave_title' => 'required|string|max:255',
    //         'annual_leave_balance' => 'required|numeric',
    //         'full_day_leave.*' => 'nullable|integer',
    //         'full_leave_from.*' => 'nullable|date',
    //         'full_leave_to.*' => 'nullable|date|after_or_equal:full_leave_from.*',
    //         'half_day_date.*' => 'nullable|date',
    //         'half_day_start_time.*' => 'nullable|date_format:H:i',
    //         'half_day_end_time.*' => 'nullable|date_format:H:i|after:half_day_start_time.*',
    //         'off_days.*' => 'nullable|date',
    //     ]);

    //     if ($validator->fails()) {
    //         return response()->json(['errors' => $validator->errors()], 422);
    //     }

    //     // Step 3: Check if the user has already taken a Birthday Leave this year
    //     $user_id = auth()->user()->id; // Assuming the user is authenticated
    //     $errors = [];

    //     // Check if "Birthday Leave" is selected in the request
    //     if (in_array(2, $request->full_day_leave ?? [])) { // 2 stands for "Birthday Leave"
    //         $currentYear = now()->year;
    //         $birthdayLeaveTaken = LeaveManagement::where('user_id', $user_id)
    //             ->whereJsonContains('leave_details', [['leave_type_id' => "2"]])
    //             ->whereYear('created_at', $currentYear)
    //             ->exists();

    //         if ($birthdayLeaveTaken) {
    //             $errors['birthday_leave'] = 'You have already taken Birthday Leave this year.';
    //         }
    //     }

    //     // Check total "Marriage Leave" days taken in lifetime
    //     if (in_array(3, $request->full_day_leave ?? [])) { // 3 stands for "Marriage Leave"
    //         $marriageLeaveDaysTaken = LeaveManagement::where('user_id', $user_id)
    //             ->whereJsonContains('leave_details', [['leave_type_id' => "3"]])
    //             ->get()
    //             ->sum(function ($leave) {
    //                 $details = json_decode($leave->leave_details, true);
    //                 return collect($details)->where('leave_type_id', "3")->sum(function ($marriageLeave) {
    //                     $start = new \DateTime($marriageLeave['start_date']);
    //                     $end = new \DateTime($marriageLeave['end_date']);
    //                     return $end->diff($start)->days + 1;
    //                 });
    //             });

    //         // Calculate new requested Marriage Leave days
    //         $newMarriageLeaveDaysRequested = 0;
    //         if (!empty($request->full_day_leave)) {
    //             foreach ($request->full_day_leave as $index => $leave_type) {
    //                 if ($leave_type == "3") {
    //                     $from = new \DateTime($request->full_leave_from[$index]);
    //                     $to = new \DateTime($request->full_leave_to[$index]);
    //                     $newMarriageLeaveDaysRequested += $to->diff($from)->days + 1;
    //                 }
    //             }
    //         }

    //         if ($marriageLeaveDaysTaken + $newMarriageLeaveDaysRequested > 3) {
    //             $errors['marriage_leave'] = 'Marriage Leave cannot exceed a total of 3 days in your lifetime.';
    //         }
    //     }

    //     // Return errors if any exist
    //     if (!empty($errors)) {
    //         return response()->json(['errors' => $errors], 422);
    //     }

    //     $annual_leave_balance = $request->annual_leave_balance;
    //     $off_days = $request->off_days ?? [];
    //     $leave_details = [];

    //     // Process each full-day leave request
    //     if (!empty($request->full_day_leave)) {
    //         foreach ($request->full_day_leave as $index => $leave_type) {
    //             $from = $request->full_leave_from[$index];
    //             $to = $request->full_leave_to[$index];

    //             // Calculate the effective leave days excluding off-days
    //             $effective_days = $this->calculateLeaveDays($from, $to, $off_days);

    //             if ($leave_type == 1) { // Annual Leave
    //                 if ($annual_leave_balance <= 0) {
    //                     // All balance used; assign entire period as unpaid leave
    //                     $leave_details[] = [
    //                         'type' => 'full_day',
    //                         'leave_type_id' => 4, // Unpaid Leave
    //                         'start_date' => $from,
    //                         'end_date' => $to,
    //                         'status' => 'unpaid'
    //                     ];
    //                 } else if ($effective_days > $annual_leave_balance) {
    //                     // Split between Annual Leave (paid) and Unpaid Leave
    //                     $paid_end_date = $this->calculatePaidEndDate($from, $annual_leave_balance, $off_days);

    //                     // Store the paid leave part
    //                     $leave_details[] = [
    //                         'type' => 'full_day',
    //                         'leave_type_id' => 1,
    //                         'start_date' => $from,
    //                         'end_date' => $paid_end_date,
    //                         'status' => 'paid'
    //                     ];

    //                     // Start unpaid leave after the paid portion ends
    //                     $unpaid_start_date = (new \DateTime($paid_end_date))->modify('+1 day')->format('Y-m-d');
    //                     $leave_details[] = [
    //                         'type' => 'full_day',
    //                         'leave_type_id' => 4, // Unpaid Leave
    //                         'start_date' => $unpaid_start_date,
    //                         'end_date' => $to,
    //                         'status' => 'unpaid'
    //                     ];

    //                     // Reset annual leave balance to zero
    //                     $annual_leave_balance = 0;
    //                 } else {
    //                     // Entire period fits within Annual Leave balance
    //                     $leave_details[] = [
    //                         'type' => 'full_day',
    //                         'leave_type_id' => 1,
    //                         'start_date' => $from,
    //                         'end_date' => $to,
    //                         'status' => 'paid'
    //                     ];

    //                     // Deduct from Annual Leave balance
    //                     $annual_leave_balance -= $effective_days;
    //                 }
    //             } else {
    //                 // For other leave types, store as paid leave
    //                 $leave_details[] = [
    //                     'type' => 'full_day',
    //                     'leave_type_id' => $leave_type,
    //                     'start_date' => $from,
    //                     'end_date' => $to,
    //                     'status' => 'paid'
    //                 ];
    //             }
    //         }
    //     }

    //     // Process half-day leaves if present
    //     if (!empty($request->half_day_date)) {
    //         foreach ($request->half_day_date as $index => $half_day_date) {
    //             $start_time = $request->half_day_start_time[$index];
    //             $end_time = $request->half_day_end_time[$index];

    //             $leave_details[] = [
    //                 'type' => 'half_day',
    //                 'leave_type_id' => 1, // Assuming Annual Leave covers half-day leave
    //                 'date' => $half_day_date,
    //                 'start_time' => $start_time,
    //                 'end_time' => $end_time
    //             ];
    //         }
    //     }

    //     // Process off-days
    //     if (!empty($request->off_days)) {
    //         foreach ($request->off_days as $off_day) {
    //             $leave_details[] = [
    //                 'type' => 'off_day',
    //                 'date' => $off_day
    //             ];
    //         }
    //     }

    //     // Step 6: Save leave application to the database
    //     LeaveManagement::create([
    //         'user_id' => $user_id,
    //         'title' => $request->leave_title,
    //         'description' => $request->description,
    //         'leave_balance' => $request->annual_leave_balance,
    //         'leave_details' => json_encode($leave_details),
    //         'status_1' => 'pending',
    //         'status_2' => 'pending',
    //         'team_leader_ids' => json_encode([2, 3]),
    //         'manager_ids' => json_encode([4, 5]),
    //         'first_approval_id' => null,
    //         'first_approval_created_time' => null,
    //         'second_approval_id' => null,
    //         'second_approval_created_time' => null,
    //         'hr_approval_id' => null,
    //         'hr_approval_created_time' => null
    //     ]);

    //     return response()->json(['message' => 'Leave application submitted successfully.'], 200);
    // }

    // // Helper to calculate leave days excluding off-days
    // private function calculateLeaveDays($start, $end, $off_days = [])
    // {
    //     $start_date = new \DateTime($start);
    //     $end_date = new \DateTime($end);
    //     $days_count = 0;

    //     while ($start_date <= $end_date) {
    //         $current_date_str = $start_date->format('Y-m-d');

    //         if (!in_array($current_date_str, $off_days)) {
    //             $days_count++;
    //         }

    //         $start_date->modify('+1 day');
    //     }

    //     return $days_count;
    // }

    // // Helper to calculate the exact end date for Annual Leave based on balance
    // private function calculatePaidEndDate($start, $annual_leave_balance, $off_days = [])
    // {
    //     $current_date = new \DateTime($start);
    //     $days_used = 0;

    //     while ($days_used < $annual_leave_balance) {
    //         $current_date_str = $current_date->format('Y-m-d');

    //         if (!in_array($current_date_str, $off_days)) {
    //             $days_used++;
    //         }

    //         if ($days_used < $annual_leave_balance) {
    //             $current_date->modify('+1 day');
    //         }
    //     }

    //     return $current_date->format('Y-m-d');
    // }

